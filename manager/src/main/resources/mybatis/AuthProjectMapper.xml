<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crowd.funding.manager.dao.AuthProjectMapper" >
  <resultMap id="BaseResultMap" type="com.crowd.funding.bean.Project" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="BIGINT" />
    <result column="day" property="day" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="deploydate" property="deploydate" jdbcType="CHAR" />
    <result column="supportmoney" property="supportmoney" jdbcType="BIGINT" />
    <result column="supporter" property="supporter" jdbcType="INTEGER" />
    <result column="completion" property="completion" jdbcType="INTEGER" />
    <result column="memberid" property="memberid" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="CHAR" />
    <result column="follower" property="follower" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crowd.funding.bean.Project" >
    insert into t_project (id, name, remark, 
      money, day, status, deploydate, 
      supportmoney, supporter, completion, 
      memberid, createdate, follower
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{money,jdbcType=BIGINT}, #{day,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{deploydate,jdbcType=CHAR}, 
      #{supportmoney,jdbcType=BIGINT}, #{supporter,jdbcType=INTEGER}, #{completion,jdbcType=INTEGER}, 
      #{memberid,jdbcType=INTEGER}, #{createdate,jdbcType=CHAR}, #{follower,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.crowd.funding.bean.Project" >
    update t_project
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      money = #{money,jdbcType=BIGINT},
      day = #{day,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      deploydate = #{deploydate,jdbcType=CHAR},
      supportmoney = #{supportmoney,jdbcType=BIGINT},
      supporter = #{supporter,jdbcType=INTEGER},
      completion = #{completion,jdbcType=INTEGER},
      memberid = #{memberid,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=CHAR},
      follower = #{follower,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, remark, money, day, status, deploydate, supportmoney, supporter, 
    completion, memberid, createdate, follower
    from t_project
  </select>

  <!-- 查询项目id的方法-->
  <select id="queryById" resultType="Project">
        select * from t_project where id = #{id}
    </select>

  <!--查询项目数量的方法-->
  <select id="queryCount" resultType="int">
    select count(id) from t_project
    <where>
      <if test="pagetext != null">
        and name like concat('%', #{pagetext}, '%')
      </if>
    </where>
  </select>
  <!--查询分页的方法-->
  <select id="pageQuery" resultType="Project">
    select * from t_project
    <where>
      <if test="pagetext != null">
        and name like concat('%', #{pagetext}, '%')
      </if>
    </where>
    limit #{startIndex}, #{pagesize}
  </select>

  <insert id="insertProject">
        insert into t_project (
            name,remark,money,status
        ) values (
            #{name},#{remark},#{money},#{status}
        )
    </insert>
  <!-- 修改项目数据的方法-->
  <update id="updateProject">
        update
            t_project
        set
            name = #{name},
            remark = #{remark},
            money = #{money}
        where id = #{id}
    </update>
  <!--删除项目数据的方法-->
  <delete id="deleteProject">
        delete from t_project where id = #{id}
  </delete>
  <!--批量删除项目数据的方法-->
  <delete id="deleteProjects">
    delete from t_project where id in
    <foreach collection="datas" item="p" open="(" close=")" separator=",">
      #{p.id}
    </foreach>
  </delete>

  <!--   调用修改状态的方法-->
  <update id="updateStatus">
        update
            t_project
        set
            status = #{status}
        where id = #{id}
    </update>
</mapper>